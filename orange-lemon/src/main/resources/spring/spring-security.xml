<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 开发环境可以放置 <debug/> 配置，会输出详细Security处理日志，正式环境建议屏蔽 <debug/> 配置 <debug />-->
    <http security="none" pattern="/s2/**"/>
    <http security="none" pattern="/s_/**"/>
	<http security="none" pattern="/favicon.ico"/>
	<http security="none" pattern="/**/*.js"/>
	<http security="none" pattern="/**/*.css"/>
	<http security="none" pattern="/**/*.jpg"/>
	<http security="none" pattern="/**/*.gif"/>
	<http security="none" pattern="/**/*.png"/>
	<http security="none" pattern="/**/*.svg"/>
	
	<!-- 过滤掉微信接口 -->
	<http security="none" pattern="/wx/**"/>
	<!-- 过滤掉公共接口 -->
	<http security="none" pattern="/public/**"/>
	<!-- 过滤掉登录接口 -->
	<http security="none" pattern="/base/login**"  />
	<!-- 过滤掉公共接口 -->
	<http security="none" pattern="/shop/**"/>
	
	<http use-expressions="true" entry-point-ref="myAuthenticationEntryPoint" access-denied-page="/common/403.jsp">
        <intercept-url pattern="/**" access="isAuthenticated()" />
        <logout logout-success-url="/j_spring_security_logout" logout-url="/base/login.do" invalidate-session="true" delete-cookies="JSESSIONID"/>
        <!-- 实现免登陆验证 -->
        <remember-me />
        <!-- 会话管理 -->
		<session-management invalid-session-url="/base/login.do" session-fixation-protection="none">
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</session-management>
        <custom-filter ref="mySecurityFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
	</http>
 	<!-- 未登录的切入点 -->
    <beans:bean id="myAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/base/login.do"></beans:property>
    </beans:bean>
    <!-- 实现了UserDetailsService的Bean 用户拥有的权限：登录后取得用户所保有的权限信息-->
	<authentication-manager alias="myAuthenticationManager">
		<authentication-provider user-service-ref="myUserDetailServiceImpl" />
	</authentication-manager>
</beans:beans>