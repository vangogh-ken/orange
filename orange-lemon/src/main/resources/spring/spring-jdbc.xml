<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"  
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task.xsd     
    http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop.xsd">
    
	 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">  
          <property name="user">
			<value>${jdbc.username}</value>
		  </property>
		  <property name="password">
			<value>${jdbc.password}</value>
		  </property>
		  <property name="driverClass">
			<value>${jdbc.driver.class}</value>
		  </property>
		  <property name="jdbcUrl">
			<value>${jdbc.url}</value>
		  </property> 
           <!--连接池中保留的最大连接数。默认值: 15 -->   
          <property name="maxPoolSize" value="100"/>  
          <!-- 连接池中保留的最小连接数，默认为：3-->  
          <property name="minPoolSize" value="50"/>  
          <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->  
          <property name="initialPoolSize" value="50"/>
          <!--最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->   
          <property name="maxIdleTime" value="60"/> 
          <!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0 -->   
          <property name="checkoutTimeout" value="3000"/>  
          <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->   
          <property name="acquireIncrement" value="10"/>  
          <!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次-->   
          <property name="acquireRetryAttempts" value="0"/>  
          <!--重新尝试的时间间隔，默认为：1000毫秒-->   
          <property name="acquireRetryDelay" value="1000" />  
          <!--关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务 -->   
          <property name="autoCommitOnClose" value="false"/> 
          <!--c3p0将建一张名为Test的空表，并使用其自带的查询语句进行测试。如果定义了这个参数那么属性preferredTestQuery将被忽略。你不能在这张Test表上进行任何操作，它将只供c3p0测试使用。默认值: null -->   
          <property name="automaticTestTable" value="Test" />
          <!--如果为false，则获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常，但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认: false-->   
          <property name="breakAfterAcquireFailure" value="false" /> 
          <!--每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 -->   
          <property name="idleConnectionTestPeriod" value="60" />  
          <!--c3p0全局的PreparedStatements缓存的大小。如果maxStatements与maxStatementsPerConnection均为0，则缓存不生效，只要有一个不为0，则语句的缓存就能生效。如果默认值: 0-->   
          <property name="maxStatements" value="2000" /> 
          <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。默认值: 0 -->   
          <property name="maxStatementsPerConnection" value="2000" /> 
     </bean> 
     
     <!-- 更新数据源，仅作更新使用。 -->
     <bean id="sourceDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">  
          <property name="user">
			<value>${jdbc.username}</value>
		  </property>
		  <property name="password">
			<value>${jdbc.password}</value>
		  </property>
		  <property name="driverClass">
			<value>${jdbc.driver.class}</value>
		  </property>
		  <property name="jdbcUrl">
			<value>${jdbc.source.url}</value>
		  </property> 
           <!--连接池中保留的最大连接数。默认值: 15 -->   
          <property name="maxPoolSize" value="5"/>  
          <!-- 连接池中保留的最小连接数，默认为：3-->  
          <property name="minPoolSize" value="3"/>  
          <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->  
          <property name="initialPoolSize" value="3"/>  
          <!--最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->   
          <property name="maxIdleTime" value="60"/> 
          <!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0 -->   
          <property name="checkoutTimeout" value="3000"/>  
          <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->   
          <property name="acquireIncrement" value="3"/>  
          <!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次-->   
          <property name="acquireRetryAttempts" value="0"/>  
          <!--重新尝试的时间间隔，默认为：1000毫秒-->   
          <property name="acquireRetryDelay" value="1000" />  
          <!--关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务 -->   
          <property name="autoCommitOnClose" value="false"/> 
          <!--c3p0将建一张名为Test的空表，并使用其自带的查询语句进行测试。如果定义了这个参数那么属性preferredTestQuery将被忽略。你不能在这张Test表上进行任何操作，它将只供c3p0测试使用。默认值: null -->   
          <property name="automaticTestTable" value="Test" />
          <!--如果为false，则获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常，但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认: false-->   
          <property name="breakAfterAcquireFailure" value="false" /> 
          <!--每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 -->   
          <property name="idleConnectionTestPeriod" value="60" />  
          <!--c3p0全局的PreparedStatements缓存的大小。如果maxStatements与maxStatementsPerConnection均为0，则缓存不生效，只要有一个不为0，则语句的缓存就能生效。如果默认值: 0-->   
          <property name="maxStatements" value="200" /> 
          <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。默认值: 0 -->   
          <property name="maxStatementsPerConnection" value="200" /> 
     </bean> 
	 
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" depends-on="dataMigrator">
        <property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 分页插件 -->
	<bean id="pagePlugin" class="com.van.halley.mybatis.plugin.PagePlugin" depends-on="dataMigrator">
		<property name="properties">
			<props>
				<prop key="dialect">com.van.halley.mybatis.jdbc.dialet.MySQLDialect</prop>
				<prop key="pageSqlId">.*query.*</prop>
			</props>
		</property>
	</bean>
	<bean id="flushCachePlugin" class="com.van.halley.mybatis.plugin.FlushCachePlugin" depends-on="dataMigrator">
	</bean>
	
	<!-- 配置sqlSessionTemplate --> 
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg index="0" ref="sqlSessionFactory" />  
    </bean> 
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" depends-on="dataMigrator">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:spring/mybatis.xml" />
		<property name="plugins">
			<array>
				<ref bean="pagePlugin" />
				<ref bean="flushCachePlugin" />
			</array>
		</property>
		<property name="mapperLocations">
			<list>
				<!-- 自动匹配Mapper映射文件  -->
				<value>classpath:com/van/halley/db/persistence/entity/*-mapper.xml</value>
			</list>
		</property>
	</bean>
    
	<!-- 事务管理器配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 数据库自动更新维护, 自定义 -->
	<bean id="dataMigrator" class="com.van.halley.core.dbmigrate.DataMigrator">
		<property name="sourceDataSource" ref="sourceDataSource"/>
		<property name="targetDataSource" ref="dataSource"/>
		<property name="applicationProperties" ref="applicationProperties"/>
	</bean>
</beans>