<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"  
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task.xsd     
    http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop.xsd">
    
    <!-- 标注类型 的事务配置 -->
	<tx:annotation-driven/>
	
	<!-- 用于外包获取bean -->
  	<bean id="applicationContextHelper" class="com.van.core.spring.ApplicationContextHelper"/>
  	
  	<!-- 默认通过properties.lst获取配置文件，然后再载入具体的配置信息 -->
    <bean id="applicationProperties" class="com.van.core.spring.ApplicationPropertiesFactoryBean"/>
    
    <!-- 定义受环境影响易变的变量, 直接使用已经装入的配置信息 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties" ref="applicationProperties"/>
    </bean>
    
	<!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<context:component-scan base-package="com.van">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 隐式地向 Spring 容器注册  -->
	<context:annotation-config/>
</beans>